package telegram

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/ofstudio/dancegobot/internal/models"
)

var testPayload = models.NotificationPayload{
	Event: &models.Event{
		Caption: "Test Event",
	},
	Partner: &models.Dancer{
		Profile: &models.Profile{
			ID: 1,
		},
		FullName: "Test Partner",
	},
	NewPartner: &models.Dancer{
		Profile: &models.Profile{
			ID:       2,
			Username: "new_partner",
		},
		FullName: "New Partner",
	},
}

func TestExecTmpl(t *testing.T) {
	t.Run("TmplRegisteredWithSingle", func(t *testing.T) {
		n := &models.Notification{
			TmplCode: models.TmplRegisteredWithSingle,
			Payload:  testPayload,
		}
		text, err := notifyText(n)
		require.NoError(t, err)
		assert.Equal(t,
			"üîî Test Event\n\n<a href=\"tg://user?id=1\">Test Partner</a> –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è —Å —Ç–æ–±–æ–π –≤ –ø–∞—Ä–µ! üéâ",
			text.String())
	})

	t.Run("TmplCanceledWithSingle", func(t *testing.T) {
		n := &models.Notification{
			TmplCode: models.TmplCanceledWithSingle,
			Payload:  testPayload,
		}
		text, err := notifyText(n)
		require.NoError(t, err)
		assert.Equal(t,
			"üîî Test Event\n\n<a href=\"tg://user?id=1\">Test Partner</a> –æ—Ç–º–µ–Ω–∏–ª –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –Ø –≤–µ—Ä–Ω—É–ª —Ç–µ–±—è –≤ —Å–ø–∏—Å–æ–∫ –∏—â—É—â–∏—Ö –ø–∞—Ä—É ü§ó",
			text.String())
	})

	t.Run("TmplCanceledByPartner", func(t *testing.T) {
		n := &models.Notification{
			TmplCode: models.TmplCanceledByPartner,
			Payload:  testPayload,
		}
		text, err := notifyText(n)
		require.NoError(t, err)
		assert.Equal(t,
			"üîî Test Event\n\n<a href=\"tg://user?id=1\">Test Partner</a> –æ—Ç–º–µ–Ω–∏–ª –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.",
			text.String())
	})

	t.Run("TmplAutoPairPartnerFound", func(t *testing.T) {
		n := &models.Notification{
			TmplCode: models.TmplAutoPairPartnerFound,
			Payload:  testPayload,
		}
		text, err := notifyText(n)
		require.NoError(t, err)
		assert.Equal(t,
			"üîî Test Event\n\n–Ø –ø–æ–¥–æ–±—Ä–∞–ª —Ç–µ–±–µ –≤ –ø–∞—Ä—É <a href=\"tg://user?id=1\">Test Partner</a> üëå",
			text.String())
	})

	t.Run("TmplAutoPairPartnerChanged", func(t *testing.T) {
		n := &models.Notification{
			TmplCode: models.TmplAutoPairPartnerChanged,
			Payload:  testPayload,
		}
		text, err := notifyText(n)
		require.NoError(t, err)
		assert.Equal(t,
			"üîî Test Event\n\n<a href=\"tg://user?id=1\">Test Partner</a> –æ—Ç–º–µ–Ω–∏–ª –≤–∞—à—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. \n–Ø –∑–∞–ø–∏—Å–∞–ª —Ç–µ–±—è –≤–º–µ—Å—Ç–µ —Å <a href=\"https://t.me/new_partner\">New Partner</a> üëå",
			text.String())
	})
}
